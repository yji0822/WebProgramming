-- STUDENT TABLE
DROP TABLE STUDENT;
DROP TABLE MAJOR;

CREATE TABLE MAJOR(
    mNO NUMBER(3) PRIMARY KEY,
    mNAME VARCHAR2(100) NOT NULL
);

CREATE TABLE STUDENT(
    sNO NUMBER(10) PRIMARY KEY,
    sNAME VARCHAR2(50) NOT NULL,
    mNO NUMBER(3) REFERENCES MAJOR(mNO),
    SCORE NUMBER(3) DEFAULT 0, 
    sEXPEL NUMBER(1) DEFAULT 0, 
    CHECK(SCORE BETWEEN 0 AND 100),
    CHECK(sEXPEL = 1 OR sEXPEL = 0)
);

DROP SEQUENCE STUDENT_SEQ;
CREATE SEQUENCE STUDENT_SEQ MAXVALUE 9999 NOCACHE NOCYCLE;

-- INSERT
SELECT * FROM MAJOR;
SELECT * FROM STUDENT;

INSERT INTO MAJOR VALUES (10, '컴퓨터공학');
INSERT INTO MAJOR VALUES (20, '산업경영공학');
INSERT INTO MAJOR VALUES (30, '정보통신공학');
INSERT INTO MAJOR VALUES (40, '멀티미디어공학');

SELECT * FROM MAJOR;

INSERT INTO STUDENT VALUES 
    (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL, '0000')), '홍길동', 10, 95, 0);
INSERT INTO STUDENT VALUES 
    (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL, '0000')), '김길동', 20, 99, 0);
INSERT INTO STUDENT VALUES 
    (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL, '0000')), '신길동', 30, 50, 1);
INSERT INTO STUDENT VALUES 
    (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL, '0000')), '박길동', 40, 100, 0);
    
    INSERT INTO STUDENT VALUES 
    (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL, '0000')), '구길동', 40, null, 0);

SELECT * FROM STUDENT;


-- 0. 첫화면에 전공 이름들 콤보 박스에 추가
SELECT MANE FROM MAJOR; -- 첫번째는 공란이 들어가도록

-- 1. 학번 검색 (sNO, sNAME, mNAME, SCORE)
SELECT sNO, sNAME, mNAME, SCORE 
    FROM MAJOR M, STUDENT S 
    WHERE M.mNO = S.mNO AND sNO = '20220001';
    
    -- 선생님
    SELECT SNO, SNAME, MNAME, SCORE
        FROM STUDENT S, MAJOR M 
		WHERE S.MNO=M.MNO AND SNO = 20220001;
    
-- 2. 이름 검색 (sNo, sName, mName, score) 
SELECT sNO, sNAME, mNAME, SCORE 
    FROM STUDENT S, MAJOR M 
    WHERE S.mNO = M.mNO 
    AND sNAME = '홍길동';
    
    -- 선생님
    SELECT SNO, SNAME, MNAME, SCORE 
	    FROM STUDENT S, MAJOR M
	    WHERE S.MNO=M.MNO AND SNAME = '홍길동';

-- 3. 전공 검색 (RANK, sNAME(sNO포함), mNAME(mNO포함), SCORE
COMMIT;
SELECT sNAME||'('||sNO||')' sNAME, mNAME||'('||M.mNO||')' mNAME, SCORE FROM STUDENT S, MAJOR M WHERE S.mNO = M.mNO AND mNAME = '컴퓨터공학' ORDER BY SCORE DESC;
SELECT ROWNUM RANK, A.*
    FROM (SELECT sNAME||'('||sNO||')' sNAME, mNAME||'('||M.mNO||')' mNAME, SCORE 
            FROM STUDENT S, MAJOR M WHERE S.mNO = M.mNO AND mNAME = '컴퓨터공학' ORDER BY SCORE DESC) A;

    -- 선생님
    SELECT ROWNUM RANK, SNAME, MNAME, SCORE 
	    FROM (SELECT SNAME||'('||SNO||')' SNAME, MNAME||'('||M.MNO||')' MNAME, SCORE 
	                FROM STUDENT S, MAJOR M
	                WHERE S.MNO=M.MNO AND MNAME= '컴퓨터공학' 
	                ORDER BY SCORE DESC);
-- 4. 학생 입력 
INSERT INTO STUDENT 
    VALUES (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL, '0000')), '강길동', 
            10, (SELECT mNO FROM MAJOR WHERE mNAME = '경영경제학'), 0);
    
    
    -- 선생님
    INSERT INTO STUDENT (SNO, SNAME, MNO, SCORE) 
	    VALUES (EXTRACT(YEAR FROM SYSDATE)||LPAD(STUDENT_SEQ.NEXTVAL, 4, '0'),
	             '유길동', (SELECT MNO FROM MAJOR WHERE MNAME = '컴퓨터공학'), 88);
    
    SELECT * FROM STUDENT;
    
    INSERT INTO STUDENT(SNO, SNAME, MNO) VALUES (EXTRACT(YEAR FROM SYSDATE)||LPAD(STUDENT_SEQ.NEXTVAL, 4, '0'),
	             '유길동', (SELECT MNO FROM MAJOR WHERE MNAME = '컴퓨터공학'));

-- 5. 학생 수정
UPDATE STUDENT SET SCORE = 80 WHERE sNO = '20220001';
SELECT ROWNUM RANK, A.* 
    FROM (SELECT * FROM STUDENT ORDER BY SCORE DESC) A;
SELECT * FROM STUDENT;

-- 선생님
UPDATE STUDENT SET SNAME='홍길동',
                   MNO=(SELECT MNO FROM MAJOR WHERE MNAME='컴퓨터공학'),
                   SCORE = 80
            WHERE SNO=2022001;
            
    -- 수정된 학생점수(SCORE)가 80이상이고, 제적자일 경우 제적해지를 추가하고자 할 때
    UPDATE STUDENT SET SEXPEL = 0
            WHERE SNO=2022003 AND SCORE>80;

-- 6. 학생 출력
SELECT sNAME||'('||sNO||')' SNAME, mNAME||'('||M.mNO||')' MNAME, SCORE
    FROM STUDENT S, MAJOR M
    WHERE S.mNO = M.mNO AND SEXPEL = 0
    ORDER BY SCORE DESC;

SELECT ROWNUM RANK, A.*
    FROM(SELECT sNAME||'('||sNO||')' SNAME, mNAME||'('||M.mNO||')' MNAME, SCORE
        FROM STUDENT S, MAJOR M
        WHERE S.mNO = M.mNO AND SEXPEL = 0
        ORDER BY SCORE DESC) A;

    -- 선생님
    SELECT ROWNUM RANK, SNAME, MNAME, SCORE 
	    FROM (SELECT SNAME||'('||SNO||')' SNAME, MNAME||'('||M.MNO||')' MNAME, SCORE 
	                FROM STUDENT S, MAJOR M
	                WHERE S.MNO=M.MNO AND SEXPEL = 0
	                ORDER BY SCORE DESC);

-- 7. 제적자 출력
SELECT sNAME||'('||sNO||')' SNAME, mNAME||'('||M.mNO||')' MNAME, SCORE, sEXPEL
        FROM STUDENT S, MAJOR M
        WHERE S.mNO = M.mNO
            AND sEXPEL = 1
        ORDER BY SCORE DESC;

SELECT ROWNUM RANK, A.*
    FROM (SELECT sNAME||'('||sNO||')' SNAME, mNAME||'('||M.mNO||')' MNAME, SCORE, sEXPEL
        FROM STUDENT S, MAJOR M
        WHERE S.mNO = M.mNO
            AND sEXPEL = 1
        ORDER BY SCORE DESC) A;
    
    -- 선생님
    SELECT ROWNUM RANK, SNAME, MNAME, SCORE
	    FROM (SELECT SNAME||'('||SNO||')' SNAME, MNAME||'('||M.MNO||')' MNAME, SCORE 
	                FROM STUDENT S, MAJOR M 
	                WHERE S.MNO=M.MNO AND SEXPEL= 1
	                ORDER BY SCORE DESC);

-- 8. 제적 처리
UPDATE STUDENT SET sEXPEL = 1 WHERE sNO = '20220001';

    -- 선생님
    UPDATE STUDENT SET sEXPEL = 1 WHERE SNO = 20220001;
    
    
COMMIT;




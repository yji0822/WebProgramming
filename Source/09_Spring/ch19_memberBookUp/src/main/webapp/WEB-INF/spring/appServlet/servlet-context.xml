<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- .do 나 jsp 가 아니므로 적용이 되지 않도록 추가 해주는 것 -->
	<resources mapping="/bookImgFileUpload/**" location="/bookImgFileUpload/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/img/**" location="/img/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.lec.ch19" />
	
	<!-- mybatis 태그 추가 -->
	<mybatis-spring:scan base-package="com.lec.ch19.dao"/>
	
	<!-- 메일 경로 루트 추가하기 -->
	<context:property-placeholder location="classpath:META-INF/property/mail.properties"/>
	<!-- mailSender 빈 생성 -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<!-- mailsender 생성을 위한 빈 만들기 -->
		<beans:property name="host" value="${mail.host}"/>
		<beans:property name="port" value="${mail.port}"/>
		<beans:property name="username" value="${mail.username}"/>
		<beans:property name="password" value="${mail.password}"/>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- 파일첨부 처리하는 빈 태그 추가 : 파일 첨부 알아서 처리해주는 -->
	<!-- 여기에 안쓰면 root-context.xml에 빈태그로 작성을 해주어야 한다. -->
	<beans:bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxSize 지정 / value=-1은 파일첨부에 용량 제한이 없다는 의미 -->
		<beans:property name="maxUploadSize" value="1048576"></beans:property>
	</beans:bean>
	
	
</beans:beans>
